{"version":3,"sources":["components/NavTabs.js","components/Jumbotron.js","components/pages/About.js","components/pages/Portfolio.js","components/pages/Contact.js","components/pages/ExternalLinks.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Jumbotron","class","components_NavTabs","About","src","alt","Portfolio","props","title","description","Contact","ExternalLinks","App","components_Jumbotron","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6267fc42.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs() {\n  return (\n    <ul className=\"nav text-center text-light\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n          About Me\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link\n          to=\"/portfolio\"\n          className={window.location.pathname === \"/portfolio\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Portfolio\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/contact\"\n          className={window.location.pathname === \"/contact\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Contact\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/externallinks\"\n          className={window.location.pathname === \"/externallinks\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          External Links\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"../App.css\";\nimport NavTabs from \"./NavTabs\"\n\n\nfunction Jumbotron (){\n  return(\n    <div className=\"jumbotron py-3\">\n    <h1  className=\"display-4\">JAMES CALINGO</h1>\n    <p class=\"lead\">Web developer. Musician. Gamer. Dorito addict.</p>\n    <NavTabs />\n    </div>\n  )\n  \n}\n\nexport default Jumbotron","import React from \"react\";\n\nfunction About (){\n  return(\n    <div className=\"container\">\n<div class=\"card mb-5\">\n      <div class=\"card-header\">\n        <h1>About me</h1>\n      </div>\n      <div class=\"card-body\">\n        <img src=\"./images/picture-of-me.jpg\" class=\"img-fluid fa-pull-left mr-3 img-thumbnail profile-pic\"\n          alt=\"Me! (Well, it will be soon...)\" />\n        <p>Hi! If the header at the top wasn't enough indication, my name is James Calingo (or \"JC\" as all the cool kids\n          call me).</p>\n        <p>Born in Massachusetts across the Charles River from Boston and raised in Jersey across the Hudson River from\n          New York (give or take a few miles), I'm an aspiring web developer who doesn't really know too much about web\n          development, so I'm learning it (or at least trying to learn it) at Rutgers Coding Bootcamp.</p>\n        <p>When I'm not busy accidentally breaking things, trying to figure out what I broke, and hoping that my\n          computer isn't on fire while trying to get things working again, I like playing music, video games, and\n          watching sports.</p>\n        <p>There's probably more I could say here, but I can't think of it right now...</p>\n\n      </div>\n    </div>\n    </div>\n\n  )\n}\n\nexport default About","import React from \"react\";\n\nfunction Portfolio(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card-header\"><h1>A few of the (awesome) things I've worked on</h1></div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-4\">\n              <div className=\"card\">\n                <div className=\"card-header\">{props.title}\n                </div>\n                <div className=\"card-body\">\n                {props.description}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Portfolio","import React from \"react\";\n\nfunction Contact() {\n  return(\n  <div className=\"container\">\n  <div className=\"card\">\n  <div className=\"card-header\">\n  <h1>Contact me</h1>\n  </div>\n  </div>\n  </div>\n  )\n}\n\nexport default Contact","import React from \"react\";\n\nfunction ExternalLinks () {\n  return(\n    <div className=\"container\">\n    <div className=\"card\">\n    <div className=\"card-header\"><h1>External Links</h1>\n      </div>\n      </div>\n      </div>\n  )\n}\n\nexport default ExternalLinks","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Jumbotron from \"./components/Jumbotron\";\n// import Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport Portfolio from \"./components/pages/Portfolio\";\nimport Contact from \"./components/pages/Contact\";\nimport ExternalLinks from \"./components/pages/ExternalLinks\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Jumbotron />\n        <Route exact path=\"/\" component={About} />\n         <Route exact path=\"/portfolio\" component={Portfolio} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route path=\"/externallinks\" component={ExternalLinks} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}